stages:
  - build
  - publish
  - website

build:
  stage: build
  tags:
    - docker
  image: centos:7
  variables:
    BUNDLE_VERSION: "1.10.3-16-g3245f67"

  before_script:
    - echo "Using tarantool-enterprise-bundle ${BUNDLE_VERSION}"
    - curl -O -L https://tarantool:${DOWNLOAD_TOKEN}@download.tarantool.io/enterprise/tarantool-enterprise-bundle-${BUNDLE_VERSION}.tar.gz
    - tar -xzf tarantool-enterprise-bundle-${BUNDLE_VERSION}.tar.gz
    - rm -rf tarantool-enterprise-bundle-${BUNDLE_VERSION}.tar.gz
    - export PATH=$PWD/tarantool-enterprise:$PATH
    - yum -y install git gcc make unzip which lua-devel luarocks java-1.8.0-openjdk
    - curl -sSL https://zipkin.apache.org/quickstart.sh | bash -s
    - tarantoolctl rocks install ldoc --server=http://rocks.moonscript.org
    - tarantoolctl rocks install https://raw.githubusercontent.com/mpeterv/luacheck/master/luacheck-dev-1.rockspec
    - export PATH=.rocks/bin:$PATH
  script:
    - tarantoolctl rocks make
    - java -jar zipkin.jar &
    - sleep 10
    - make lint
    - make unit
    - ./release.sh
    - make doc
  artifacts:
    name: "$CI_COMMIT_REF_NAME"
    paths:
      - doc/
      - release/
      - release-doc/

publish:
  stage: publish
  dependencies:
    - build
  tags:
    - shell
  when: manual
  only:
    - tags
  script:
    - aws --endpoint-url "${AWS_S3_ENDPOINT_URL}" s3 cp release/*.all.rock "s3://packages/rocks/"
    - aws --endpoint-url "${AWS_S3_ENDPOINT_URL}" s3 cp --recursive release-doc/ "s3://packages/rocks-doc/"

website:
  stage: website
  tags:
    - heroku
    - mcs
  script:
    - docker build -t tracing-doc .
    - docker run --rm
      -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
      -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
      tracing-doc
      sh -c "aws s3 cp configs/tracing s3://tarantool-io-doc-builds/tracing --endpoint-url=$AWS_S3_ENDPOINT_URL --recursive"
    - bash trigger_update.sh
  only:
    - master
